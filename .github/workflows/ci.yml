name: CI
on:
  - push
  - pull_request
  - workflow_dispatch
jobs:
  ci-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Setup java
      uses: actions/setup-java@v1
      with:
        java-version: '11.0.x'
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Install uuid
      run: sudo apt-get install uuid-dev python3-venv
    - name: Install dependencies
      run: |
        python -m pip install --upgrade ivpm
        python -m ivpm update
    - name: Build
      run: |
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release
        make
    - name: Package
      run: |
        cd build
        tar czf psslangserver-linux_x64.tar.gz psslangserver
    - name: Save build result
      uses: actions/upload-artifact@v2
      with:
          name: psslangserver-linux_x64
          path: |
              build/psslangserver
  ci-osx:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v1
    - name: Setup java
      uses: actions/setup-java@v1
      with:
        java-version: '11.0.x'
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Install uuid
      run: brew install ossp-uuid
    - name: Install dependencies
      run: |
        python -m pip install --upgrade ivpm
        python -m ivpm update
    - name: Build
      run: |
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release
        make
    - name: Save build result
      uses: actions/upload-artifact@v2
      with:
          name: psslangserver-macos_x64
          path: |
              build/psslangserver

  ci-win32_x64:
    name: "Windows x64"
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v1
    - name: Setup java
      uses: actions/setup-java@v1
      with:
        java-version: '11.0.x'
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade ivpm
        python -m pip install --upgrade ninja
        python -m ivpm update
    - name: Build
      run: |
        call "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
        mkdir build
        cd build
        cmake .. -GNinja -DCMAKE_BUILD_TYPE=Release 
        ninja
      shell: cmd
    - name: Save build result
      uses: actions/upload-artifact@v2
      with:
          name: psslangserver-win32_x64
          path: |
              build/psslangserver.exe
  ci-win32_x86:
    name: "Windows x86"
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v1
    - name: Setup java
      uses: actions/setup-java@v1
      with:
        java-version: '11.0.x'
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade ivpm
        python -m pip install --upgrade ninja
        python -m ivpm update
    - name: Build
      run: |
        call "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars32.bat"
        mkdir build
        cd build
        cmake .. -GNinja -DCMAKE_BUILD_TYPE=Release 
        ninja
      shell: cmd
    - name: Save build result
      uses: actions/upload-artifact@v2
      with:
          name: psslangserver-win32_x86
          path: |
              build/psslangserver.exe
  release:
    name: "Release Artifacts"
    needs: [ci-linux, ci-osx, ci-win32_x64, ci-win32_x86]
    runs-on: ubuntu-latest
    # Note this. We are going to use that in further jobs.
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: psslangserver-linux_x64
        path: linux_x64
    - uses: actions/download-artifact@v2
      with:
        name: psslangserver-macos_x64
        path: macos_x64
    - uses: actions/download-artifact@v2
      with:
        name: psslangserver-win32_x64
        path: win32_x64
    - uses: actions/download-artifact@v2
      with:
        name: psslangserver-win32_x86
        path: win32_x86
    - name: check-up
      run: |
        echo "Let's see what's here"
        ls
        find -type f
    - name: repack
      run: |
        cd linux_x64
        chmod +x psslangserver
        tar czf ../psslangserver-linux_x64.tar.gz psslangserver
        cd ..

        cd macos_x64
        chmod +x psslangserver
        tar czf ../psslangserver-macos_x64.tar.gz psslangserver
        cd ..

        cd win32_x64
        zip ../psslangserver-win32_x64.zip psslangserver.exe
        cd ..

        cd win32_x86
        zip ../psslangserver-win32_x86.zip psslangserver.exe
        cd ..

    - name: check-up2
      run: |
        echo "Let's see what's here"
        echo "github.ref: ${{ github.ref }}"
        ls
        find -type f
    - name: Create release
      id: create_release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload macOS x64
      if: startsWith(github.ref, 'refs/tags/v')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./psslangserver-macos_x64.tar.gz
        asset_name: psslangserver-macos_x64.tar.gz
        asset_content_type: application/x-gzip

    - name: Upload Linux x64
      if: startsWith(github.ref, 'refs/tags/v')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./psslangserver-linux_x64.tar.gz
        asset_name: psslangserver-linux_x64.tar.gz
        asset_content_type: application/x-gzip

    - name: Upload Win32 x64
      if: startsWith(github.ref, 'refs/tags/v')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./psslangserver-win32_x64.zip
        asset_name: psslangserver-win32_x64.zip
        asset_content_type: application/zip

    - name: Upload Win32 x86
      if: startsWith(github.ref, 'refs/tags/v')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./psslangserver-win32_x86.zip
        asset_name: psslangserver-win32_x86.zip
        asset_content_type: application/zip

